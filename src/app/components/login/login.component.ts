import { Component, Output, EventEmitter } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { AuthService } from '../../services/auth.service';
import Swal from 'sweetalert2';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent {
  @Output() loginSuccess = new EventEmitter<void>();
  
  username = '';
  password = '';
  loading = false;
  error: string | null = null;

  // Google Apps Script Web App URL for authentication
  private readonly authApiUrl = 'https://script.google.com/macros/s/AKfycbw7-F46lou4iiIg0_JOldcsLiUUib2XO_EZXiQ90U4shMdRz-VY1mkTYqno2rf5NU2w/exec';

  constructor(
    private readonly http: HttpClient,
    private readonly authService: AuthService
  ) {}

  login() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!this.username.trim() || !this.password.trim()) {
      this.error = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô';
      this.showErrorAlert(this.error);
      return;
    }

    this.loading = true;
    this.error = null;
    
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Google Apps Script
    const loginData = {
      username: this.username.trim(),
      password: this.password.trim()
    };
    
    // Google Apps Script ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ action parameter ‡πÉ‡∏ô URL ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô body
    const apiUrl = `${this.authApiUrl}?action=login`;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° headers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Google Apps Script
    const httpOptions = {
      headers: {
        'Content-Type': 'application/json'
      }
    };
    
    this.http.post(apiUrl, loginData, httpOptions).subscribe({
      next: (response: any) => {
        this.loading = false;
        
        // Debug log
        console.log('üîç LOGIN RESPONSE DEBUG:', {
          fullResponse: response,
          responseData: response.data,
          responseUser: response.user,
          dataUserRole: response.data?.user?.role,
          userRole: response.user?.role,
          responseSuccess: response.success,
          username: this.username
        });
        
        if (response.success) {
          // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô AuthService - ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API response ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å
          const userData = {
            id: response.data?.user?.id || response.user?.id,
            username: response.data?.user?.username || response.user?.username || this.username,
            role: response.data?.user?.role || response.user?.role || 'user' // default to user if no role
          };
          
          console.log('üîë STORING USER DATA:', userData);
          
          this.authService.login(userData);
          
          this.showSuccessAlert('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
          
          // ‡∏™‡πà‡∏á event ‡πÑ‡∏õ‡∏¢‡∏±‡∏á parent component
          setTimeout(() => {
            this.loginSuccess.emit();
          }, 1500);
          
        } else {
          const errorMsg = response.message || '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á';
          this.error = errorMsg;
          this.showErrorAlert(errorMsg);
        }
      },
      error: (err) => {
        this.loading = false;
        console.error('Login error details:', err);
        
        // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡∏ï‡∏≤‡∏° status code
        let errorMessage = '';
        if (err.status === 401) {
          errorMessage = '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Apps Script';
        } else if (err.status === 403) {
          errorMessage = '‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á';
        } else if (err.status === 0) {
          errorMessage = '‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á CORS ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL';
        } else {
          errorMessage = `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ (${err.status}): ${err.message || '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'}`;
        }
        
        this.error = errorMessage;
        this.showErrorAlert(errorMessage);
      }
    });
  }

  // Methods ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á SweetAlert2
  private showSuccessAlert(message: string): void {
    Swal.fire({
      title: '‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
      text: message,
      icon: 'success',
      confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á',
      confirmButtonColor: '#10b981',
      timer: 2000,
      timerProgressBar: true,
      width: '50vw',
      padding: '2rem',
      showClass: {
        popup: 'animate__animated animate__zoomIn'
      },
      hideClass: {
        popup: 'animate__animated animate__zoomOut'
      },
      customClass: {
        popup: 'login-success-popup',
        title: 'login-popup-title',
        htmlContainer: 'login-popup-text',
        confirmButton: 'login-popup-button'
      }
    });
  }

  private showErrorAlert(message: string): void {
    Swal.fire({
      title: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!',
      text: message,
      icon: 'error',
      confirmButtonText: '‡∏ï‡∏Å‡∏•‡∏á',
      confirmButtonColor: '#ef4444',
      width: '50vw',
      padding: '2rem',
      showClass: {
        popup: 'animate__animated animate__shakeX'
      },
      hideClass: {
        popup: 'animate__animated animate__zoomOut'
      },
      customClass: {
        popup: 'login-error-popup',
        title: 'login-popup-title',
        htmlContainer: 'login-popup-text',
        confirmButton: 'login-popup-button'
      }
    });
  }
}